module Synfini.Interface.Onboarding.Issuer.MinterBurner.Factory where

import qualified Synfini.Interface.Onboarding.Issuer.MinterBurner.MinterBurner as MinterBurner
import qualified Daml.Finance.Interface.Util.Disclosure as Disclosure
import Daml.Finance.Interface.Types.Common.Types

data View = View
  with
    provider : Party
  deriving (Show, Eq)

type V = View

interface Factory requires Disclosure.I where
  viewtype V

  create' : Create -> Update (ContractId MinterBurner.I)

  nonconsuming choice Create : ContractId MinterBurner.I
    with
      custodian : Party
      depository : Party
      issuer : Party
      observers : PartiesMap
    controller custodian
    do
      create' this arg

type I = Factory
