-- Warning: if any types are added to this module they should also be added to the `UsedTypes` in
-- Synfini.Wallet.Api.Types.Internal, otherwise they will not appear in the codegen output
module Synfini.Wallet.Api.Types where

import Daml.Finance.Interface.Settlement.Types
import Daml.Finance.Interface.Types.Common.Types

import Daml.Finance.Interface.Account.Account qualified as Account
import Daml.Finance.Interface.Holding.Base qualified as Holding
import Daml.Finance.Interface.Instrument.Base.Instrument qualified as Instrument
import Daml.Finance.Interface.Instrument.Token.Instrument qualified as Token
import Daml.Finance.Interface.Settlement.Batch qualified as Batch
import Daml.Finance.Interface.Settlement.Instruction qualified as Instruction

import Synfini.Interface.Onboarding.Account.OpenOffer.OpenOffer qualified as AccountOpenOffer
import Synfini.Interface.Onboarding.Issuer.Instrument.Token.Issuer qualified as TokenIssuer

-- Utility types
data Result r = Result -- TODO add more fields to this such as HTTP response code or errors
  with
    result : r
  deriving (Show, Eq)

data TransactionDetail = TransactionDetail
  with
    offset : Text
    effectiveTime : Time
  deriving (Show, Eq)

-- Accounts
data AccountSummary cid view = AccountSummary
  with
    cid : cid
    view : view
  deriving (Show, Eq)

newtype AccountSummaryRaw jsonObject = AccountSummaryRaw (AccountSummary Text jsonObject) deriving (Show, Eq)

newtype AccountSummaryTyped = AccountSummaryTyped (AccountSummary (ContractId Account.I) Account.V) deriving (Show, Eq)

data AccountFilter = AccountFilter
  with
    custodian : Optional Party
    owner : Optional Party
    id : Optional Id
  deriving (Show, Eq)

-- Account offers
data AccountOpenOfferSummary cid view = AccountOpenOfferSummary
  with
    cid : cid
    view : view
    create : TransactionDetail
  deriving (Show, Eq)

newtype AccountOpenOfferSummaryRaw jsonObject = AccountOpenOfferSummaryRaw (AccountOpenOfferSummary Text jsonObject)
  deriving (Show, Eq)

newtype AccountOpenOfferSummaryTyped = AccountOpenOfferSummaryTyped
    (AccountOpenOfferSummary (ContractId AccountOpenOffer.I) AccountOpenOffer.V)
  deriving (Show, Eq)

-- TODO may need to add filter parameters here
data AccountOpenOffersFilter = AccountOpenOffersFilter
  with
  deriving (Show, Eq)

-- Balances
data Balance = Balance
  with
    account : AccountKey
    instrument : InstrumentKey
    unlocked : Decimal
    locked : Decimal
  deriving (Show, Eq)

newtype BalanceRaw = BalanceRaw Balance deriving (Show, Eq)

newtype BalanceTyped = BalanceTyped Balance deriving (Show, Eq)

data BalanceFilter = BalanceFilter
  with
    account : AccountKey
  deriving (Show, Eq)

-- Settlements
data SettlementStep
  routedStep
  id
  instructionCid
  allocation
  approval = SettlementStep
  with
    routedStep : routedStep
    instructionId : id
    instructionCid : instructionCid
    allocation : allocation
    approval : approval
  deriving (Show, Eq)

data SettlementSummary
  id
  parties
  batchCid
  routedStep
  instructionCid
  allocation
  approval = SettlementSummary
  with
    batchId : id
    requestors : parties
    settlers : parties
    batchCid : Optional batchCid
    contextId : Optional id
    description : Optional Text
    steps : [SettlementStep routedStep id instructionCid allocation approval]
    witness : TransactionDetail
    execution : Optional TransactionDetail
  deriving (Show, Eq)

newtype SettlementSummaryRaw jsonObject = SettlementSummaryRaw (
    SettlementSummary jsonObject jsonObject Text jsonObject Text jsonObject jsonObject
  ) deriving (Show, Eq)

newtype SettlementSummaryTyped = SettlementSummaryTyped (
    SettlementSummary Id Parties (ContractId Batch.I) RoutedStep (ContractId Instruction.I) Allocation Approval
  ) deriving (Show, Eq)

data SettlementsFilter = SettlementsFilter
  with
    batchId : Optional Id
    before : Optional Text
    limit : Optional Int
  deriving (Show, Eq)

-- Holdings
data HoldingSummary cid view = HoldingSummary
  with
    cid : cid
    view : view
    create : TransactionDetail
  deriving (Show, Eq)

newtype HoldingSummaryRaw jsonObject = HoldingSummaryRaw (HoldingSummary Text jsonObject) deriving (Show, Eq)

newtype HoldingSummaryTyped = HoldingSummaryTyped (HoldingSummary (ContractId Holding.I) Holding.V) deriving (Show, Eq)

data HoldingFilter = HoldingFilter
  with
    account : AccountFilter
    instrument : InstrumentKey
  deriving (Show, Eq)

-- Instruments
-- TODO may need to add create/archive TransactionDetail for this type
data InstrumentSummary cid tokenView = InstrumentSummary
  with
    cid : cid
    tokenView : Optional tokenView
  deriving (Show, Eq)

newtype InstrumentSummaryRaw jsonObject = InstrumentSummaryRaw (InstrumentSummary Text jsonObject) deriving (Show, Eq)

newtype InstrumentSummaryTyped = InstrumentSummaryTyped (InstrumentSummary (ContractId Instrument.I) Token.V)
  deriving (Show, Eq)

data InstrumentsFilter = InstrumentsFilter
  with
    depository : Optional Party
    issuer : Party
    id : Optional Id
    version : Optional Text
  deriving (Show, Eq)

-- Issuers
data TokenIssuerSummary cid view = TokenIssuerSummary
  with
    cid : cid
    view : view
  deriving (Show, Eq)

data IssuerSummary tokenCid tokenView = IssuerSummary
  with
    -- In future, there may be issuer contracts for other instrument types, so this is an optional field
    token : Optional (TokenIssuerSummary tokenCid tokenView)
  deriving (Show, Eq)

newtype IssuerSummaryRaw jsonObject = IssuerSummaryRaw (IssuerSummary Text jsonObject)
  deriving (Show, Eq)

newtype IssuerSummaryTyped = IssuerSummaryTyped (IssuerSummary (ContractId TokenIssuer.I) (TokenIssuer.V))
  deriving (Show, Eq)

data IssuersFilter = IssuersFilter
  with
    depository : Optional Party
    issuer : Optional Party
  deriving (Show, Eq)
