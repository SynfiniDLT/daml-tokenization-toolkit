module Synfini.Interface.Onboarding.Account.OneTimeOffer.OneTimeOffer where

import Daml.Finance.Interface.Types.Common.Types
import qualified Daml.Finance.Interface.Account.Account as Account
import qualified Daml.Finance.Interface.Account.Factory as Account
import qualified Daml.Finance.Interface.Holding.Factory as Holding

data View = View
  with
    account : AccountKey
    controllers : Account.Controllers
    description : Text
    observers : PartiesMap
    accountFactoryCid : ContractId Account.F
    holdingFactoryCid : ContractId Holding.F
    offerDescription : Text
  deriving (Show, Eq)

type V = View

interface OneTimeOffer where
  viewtype V

  accept : Update (ContractId Account.I)

  decline : Update ()

  choice Accept : ContractId Account.I
    controller (view this).account.owner
    do
      accept this

  choice Decline : ()
    controller (view this).account.owner
    do
      decline this

type I = OneTimeOffer
